{"_type":"export","__export_format":4,"__export_date":"2022-11-17T22:41:54.478Z","__export_source":"insomnia.desktop.app:v2022.6.0","resources":[{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0d0ec9eda8","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0dfbdc4f23","modified":1668724640988,"created":1668724467700,"url":"{{ base_url }}/products","name":"Create a new product","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"name\": \"Product 1\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1668724467700,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_fb41da58254a4cd999862ec194e7da0dfbdc4f23","parentId":"wrk_fb41da58254a4cd999862ec194e7da0d","modified":1668720652411,"created":1668720652411,"name":"products","description":"Product operations","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1668720652411,"_type":"request_group"},{"_id":"wrk_fb41da58254a4cd999862ec194e7da0d","parentId":null,"modified":1668724655807,"created":1668718935771,"name":"my-spec.yaml","description":"# Store Manager API documentation\n- [Created by Lucas Ximenes](https://www.linkedin.com/in/lucasdximenes)\n- [Github](https://github.com/lucasdximenes/store-manager-api)","scope":"design","_type":"workspace"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0d477f21b7","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0dfbdc4f23","modified":1668724467680,"created":1668724467680,"url":"{{ base_url }}/products/search","name":"Search for a product by name","description":"","method":"GET","body":{},"parameters":[{"name":"q","disabled":false,"value":"string"}],"headers":[],"authentication":{},"metaSortKey":-1668724467680,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0df1a0f7a7","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0dfbdc4f23","modified":1668720652400,"created":1668720652400,"url":"{{ base_url }}/products","name":"Get all products","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1668720652400,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0dee15caf7","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0dfbdc4f23","modified":1668720692387,"created":1668720652396,"url":"{{ base_url }}/products/{{ productId }}","name":"Get a product by id","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1668720652396,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0d55622e53","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0dfbdc4f23","modified":1668724635027,"created":1668720652392,"url":"{{ base_url }}/products/{{ productId }}","name":"Update a product by id","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"name\": \"Product 1\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1668720652392,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0d3f09550b","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0dfbdc4f23","modified":1668720652387,"created":1668720652387,"url":"{{ base_url }}/products/{{ productId }}","name":"Delete a product by id","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1668720652388,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0dd30be8f4","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0d59248c4d","modified":1668724467674,"created":1668724467674,"url":"{{ base_url }}/sales","name":"Get all sales","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1668724467674,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_fb41da58254a4cd999862ec194e7da0d59248c4d","parentId":"wrk_fb41da58254a4cd999862ec194e7da0d","modified":1668720652406,"created":1668720652406,"name":"sales","description":"Sale operations","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1668720652406,"_type":"request_group"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0dfb011469","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0d59248c4d","modified":1668724637659,"created":1668724467670,"url":"{{ base_url }}/sales","name":"Create a new sale","description":"","method":"POST","body":{"mimeType":"application/json","text":"[\n  {\n    \"productId\": 1,\n    \"quantity\": 1\n  }\n]"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1668724467670,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0dd8108b0a","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0d59248c4d","modified":1668724498156,"created":1668724467668,"url":"{{ base_url }}/sales/{{ saleId }}","name":"Get a sale by id","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1668724467668,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0d1d94a0c7","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0d59248c4d","modified":1668724639354,"created":1668724467663,"url":"{{ base_url }}/sales/{{ saleId }}","name":"Update a sale by id","description":"","method":"PUT","body":{"mimeType":"application/json","text":"[\n  {\n    \"productId\": 1,\n    \"quantity\": 1\n  }\n]"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1668724467663,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_fb41da58254a4cd999862ec194e7da0df0cd4cd1","parentId":"fld_wrk_fb41da58254a4cd999862ec194e7da0d59248c4d","modified":1668724467657,"created":1668724467657,"url":"{{ base_url }}/sales/{{ saleId }}","name":"Delete a sale by id","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1668724467657,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_658479bb96e8013d4c01c67c0d532de0e7009f1a","parentId":"wrk_fb41da58254a4cd999862ec194e7da0d","modified":1668718935776,"created":1668718935776,"name":"Base Environment","data":{"base_url":"{{ scheme }}://{{ host }}{{ base_path }}"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1668718935776,"_type":"environment"},{"_id":"jar_658479bb96e8013d4c01c67c0d532de0e7009f1a","parentId":"wrk_fb41da58254a4cd999862ec194e7da0d","modified":1668718935849,"created":1668718935849,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_d03fd16f41b747b68aa92aa821654d43","parentId":"wrk_fb41da58254a4cd999862ec194e7da0d","modified":1668724662628,"created":1668718935772,"fileName":"store-manager-api.yaml","contents":"# Store-manager-api documentation\nopenapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Store Manager API\n  description: This is the API documentation for the Store Manager application.\n  contact:\n    name: Lucas Ximenes\n    email: lucasdximenes@gmail.com\n    url: github.com/lucasximenes\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\nservers:\n  - url: http://localhost:3000/\n    description: Local server\ntags:\n  - name: products\n    description: Product operations\n  - name: sales\n    description: Sale operations\npaths:\n  /products:\n    get:\n      tags:\n        - products\n      summary: Get all products\n      description: Get all products\n      operationId: getProducts\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/getProducts'\n    post:\n      tags:\n        - products\n      summary: Create a new product\n      description: Create a new product\n      operationId: createProduct\n      requestBody:\n        description: Product object that needs to be added to the store\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createProduct'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/createdProduct'\n        '400':\n          description: Invalid input, name is required.\n        '422':\n          description: Name must be a string; Name length must be at least 5 characters long\n\n  '/products/{productId}':\n    get:\n      tags:\n        - products\n      summary: Get a product by id\n      description: Get a product by id\n      operationId: getProductById\n      parameters:\n        - name: productId\n          in: path\n          description: ID of product to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getProductById'\n        '404':\n          description: Product not found\n        '422':\n          description: ID must be a positive integer; ID must be a number\n    put:\n      tags:\n        - products\n      summary: Update a product by id\n      description: Update a product by id\n      operationId: updateProductById\n      parameters:\n        - name: productId\n          in: path\n          description: ID of product to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        description: Product object that needs to be updated\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/updateProductById'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/updatedProduct'\n        '400':\n          description: Invalid input, name is required.\n        '404':\n          description: Product not found\n        '422':\n          description: ID must be a positive integer; ID must be a number; Name must be a string; Name length must be at least 5 characters long\n    delete:\n      tags:\n        - products\n      summary: Delete a product by id\n      description: Delete a product by id\n      operationId: deleteProductById\n      parameters:\n        - name: productId\n          in: path\n          description: ID of product to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '204':\n          description: No content\n        '404':\n          description: Product not found\n        '422':\n          description: ID must be a positive integer; ID must be a number\n\n  /products/search:\n    get:\n      tags:\n        - products\n      summary: Search for a product by name\n      description: Search for a product by name\n      operationId: searchProduct\n      parameters:\n        - name: q\n          in: query\n          description: Name of product to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: if query is empty, return all products; If product not found, return empty array\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/getProductByName'\n\n  /sales:\n    get:\n      tags:\n        - sales\n      summary: Get all sales\n      description: Get all sales\n      operationId: getSales\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/getSales'\n    post:\n      tags:\n        - sales\n      summary: Create a new sale\n      description: Create a new sale\n      operationId: createSale\n      requestBody:\n        description: Sale object that needs to be added to the store\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/createSale'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/createdSale'\n        '400':\n          description: Sales must be an array; Sales is empty; productId is required; quantity is required\n        '404':\n          description: Product not found\n        '422':\n          description: productId must be a positive integer; productId must be a number; quantity must be a positive integer; quantity must be a number\n\n  '/sales/{saleId}':\n    get:\n      tags:\n        - sales\n      summary: Get a sale by id\n      description: Get a sale by id\n      operationId: getSaleById\n      parameters:\n        - name: saleId\n          in: path\n          description: ID of sale to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getSaleById'\n        '404':\n          description: Sale not found\n        '422':\n          description: ID must be a positive integer; ID must be a number\n    put:\n      tags:\n        - sales\n      summary: Update a sale by id\n      description: Update a sale by id\n      operationId: updateSaleById\n      parameters:\n        - name: saleId\n          in: path\n          description: ID of sale to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        description: Sale object that needs to be updated\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/updateSaleById'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/updatedSale'\n        '400':\n          description: Sales must be an array; Sales is empty; productId is required; quantity is required\n        '404':\n          description: Sale not found; Product not found\n        '422':\n          description: ID must be a positive integer; ID must be a number; productId must be a positive integer; productId must be a number; quantity must be a positive integer; quantity must be a number\n    delete:\n      tags:\n        - sales\n      summary: Delete a sale by id\n      description: Delete a sale by id\n      operationId: deleteSaleById\n      parameters:\n        - name: saleId\n          in: path\n          description: ID of sale to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '204':\n          description: No content\n        '404':\n          description: Sale not found\n        '422':\n          description: ID must be a positive integer; ID must be a number\n\ncomponents:\n  schemas:\n    getProducts:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: 'Product 1'\n    getProductById:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: 'Product 1'\n    getProductByName:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: 'Product 1'\n    createProduct:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Product 1'\n    createdProduct:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: 'Product 1'\n    updateProductById:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Product 1'\n    updatedProduct:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: 'Product 1'\n    getSales:\n      type: object\n      properties:\n        saleId:\n          type: integer\n          format: int64\n          example: 1\n        date:\n          type: string\n          example: '2022-11-17T00:00:00.000Z'\n        productId:\n          type: integer\n          format: int64\n          example: 1\n        quantity:\n          type: integer\n          format: int64\n          example: 1\n    getSaleById:\n      type: object\n      properties:\n        date:\n          type: string\n          example: '2022-11-17T00:00:00.000Z'\n        productId:\n          type: integer\n          format: int64\n          example: 1\n        quantity:\n          type: integer\n          format: int64\n          example: 1\n    createSale:\n      type: object\n      properties:\n        productId:\n          type: integer\n          format: int64\n          example: 1\n        quantity:\n          type: integer\n          format: int64\n          example: 1\n    createdSale:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        itemsSold:\n          type: array\n          items:\n            type: object\n            properties:\n              productId:\n                type: integer\n                format: int64\n                example: 1\n              quantity:\n                type: integer\n                format: int64\n                example: 1\n    updateSaleById:\n      type: object\n      properties:\n        productId:\n          type: integer\n          format: int64\n          example: 1\n        quantity:\n          type: integer\n          format: int64\n          example: 1\n    updatedSale:\n      type: object\n      properties:\n        saleId:\n          type: integer\n          format: int64\n          example: 1\n        itemsUpdated:\n          type: array\n          items:\n            type: object\n            properties:\n              productId:\n                type: integer\n                format: int64\n                example: 1\n              quantity:\n                type: integer\n                format: int64\n                example: 1\n","contentType":"yaml","_type":"api_spec"},{"_id":"env_env_658479bb96e8013d4c01c67c0d532de0e7009f1a_sub","parentId":"env_658479bb96e8013d4c01c67c0d532de0e7009f1a","modified":1668720652416,"created":1668720652416,"name":"OpenAPI env","data":{"scheme":"http","base_path":"","host":"localhost:3000"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1668720652416,"_type":"environment"}]}